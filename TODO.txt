GIVEN AS HOMEWORK:
- Implement Camera
	* CameraModule that will generate the perspective and view matrices.
	* Draw a grid on the ground for orientation.
	* Have all the camera controls from Unity (except orbit for now).
	* Refer to Game Camera slide for implementation details.
	* React to window resize, calculate Aspect Ratio and modify FOVs accordingly.
	* Prepare the module to receive different settings through an Editor Window.
		# FOV horizontal and vertical, near/far plane distance etc.
		# Movement/Rotation Speed, background color etc.
- Load model from file
	* Integrate and use assimp library.
	* Load Bakerhouse Modal and texture.
	* Our mesh is stagtic so, create interleaved arrays for VBO.
	* Add an imgui menu showing mesh related info.
		# Num vertices
		# Num triangles
		# Diffuse texture

OTHERS:
- FPS graph:
	* Accumulate fps data in a vector.
	* When the vector is full, cycle data.
	* Use ImGui::PlotHistogram() to draw.
- Window options window inside editor
	* Width
	* Height
	* Brightness
	* Refresh rate
	* Screen options
		# Fullscreen 
		# Resizable
		# Borderless
		# Full Desktop
- Add Hardware Window inside editor that shows cpu, system ram, caps etc.
	* Either in a module or in Application.
	* Better if GPU info and Memory is added too.
		# Vendor
		# Brand
		# VRAM usage
		# VRAM available
		# VRAM reserved